# ===============================
# = TURK Properties
# ===============================
com.theturk.fileUploadLocation=/home/vijay/fileupload
com.theturk.maxWorkersAllowedToRegister=5
com.theturk.maxJobsPerWorker=2
com.theturk.maxTimeToExecuteJobInSec=5

# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
spring.datasource.url=jdbc:postgresql://localhost:5432/turk
spring.datasource.username=turk
spring.datasource.password=turk
spring.datasource.driver-class-name=org.postgresql.Driver
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=create-drop

# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

#Added below property to avoid err
#SQLFeatureNotSupportedException: Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

## TURK Logging
logging.level.com.theturk= DEBUG

## Hibernate Logging
#logging.level.org.hibernate.SQL= DEBUG

## Spring Logging
logging.level.org.springframework=ERROR
logging.level.org.hibernate=ERROR


#Maximum file size upload limit
spring.servlet.multipart.max-file-size=300MB
spring.servlet.multipart.max-request-size=300MB

